From 9acd415c55f4bc80093af8bcedfa8e9e18e680a7 Mon Sep 17 00:00:00 2001
From: Joonas Koivunen <joonas.koivunen@gmail.com>
Date: Wed, 17 Jun 2020 14:08:37 +0300
Subject: [PATCH 4/4] get tests per https://github.com/ipfs/js-ipfs/pull/3093

---
 packages/interface-ipfs-core/src/get.js | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/packages/interface-ipfs-core/src/get.js b/packages/interface-ipfs-core/src/get.js
index f54ef26e..453bf725 100644
--- a/packages/interface-ipfs-core/src/get.js
+++ b/packages/interface-ipfs-core/src/get.js
@@ -6,6 +6,7 @@ const CID = require('cids')
 const all = require('it-all')
 const concat = require('it-concat')
 const { getDescribe, getIt, expect } = require('./utils/mocha')
+const importer = require('ipfs-unixfs-importer')
 
 /** @typedef { import("ipfsd-ctl/src/factory") } Factory */
 /**
@@ -23,8 +24,8 @@ module.exports = (common, options) => {
 
     before(async () => {
       ipfs = (await common.spawn()).api
-      await all(ipfs.add(fixtures.smallFile.data))
-      await all(ipfs.add(fixtures.bigFile.data))
+      await all(importer([{ content: fixtures.smallFile.data }], ipfs.block))
+      await all(importer([{ content: fixtures.bigFile.data }], ipfs.block))
     })
 
     after(() => common.clean())
@@ -48,7 +49,7 @@ module.exports = (common, options) => {
     it('should get a file added as CIDv0 with a CIDv1', async () => {
       const input = Buffer.from(`TEST${Math.random()}`)
 
-      const res = await all(ipfs.add(input, { cidVersion: 0 }))
+      const res = await all(importer([{ content: input }], ipfs.block))
 
       const cidv0 = res[0].cid
       expect(cidv0.version).to.equal(0)
@@ -62,7 +63,7 @@ module.exports = (common, options) => {
     it('should get a file added as CIDv1 with a CIDv0', async () => {
       const input = Buffer.from(`TEST${Math.random()}`)
 
-      const res = await all(ipfs.add(input, { cidVersion: 1, rawLeaves: false }))
+      const res = await all(importer([{ content: input }], ipfs.block, { cidVersion: 1, rawLeaves: false }))
 
       const cidv1 = res[0].cid
       expect(cidv1.version).to.equal(1)
@@ -101,7 +102,7 @@ module.exports = (common, options) => {
         emptyDir('files/empty')
       ]
 
-      const res = await all(ipfs.add(dirs))
+      const res = await all(importer(dirs, ipfs.block))
       const root = res[res.length - 1]
 
       expect(root.path).to.equal('test-folder')
@@ -152,7 +153,7 @@ module.exports = (common, options) => {
         content: fixtures.smallFile.data
       }
 
-      for await (const fileAdded of ipfs.add(file)) {
+      for await (const fileAdded of importer([file], ipfs.block)) {
         if (fileAdded.path === 'a') {
           const files = await all(ipfs.get(`/ipfs/${fileAdded.cid.toString()}/testfile.txt`))
           expect(files).to.be.length(1)
@@ -167,7 +168,7 @@ module.exports = (common, options) => {
         content: fixtures.smallFile.data
       }
 
-      const filesAdded = await all(ipfs.add([file]))
+      const filesAdded = await all(importer([file], ipfs.block))
 
       filesAdded.forEach(async (file) => {
         if (file.path === 'a') {
-- 
2.20.1

